digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_2128daa1 [label="0: (global)()" name="ParallelTest::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_1fa3e286 [label="46: A()" name="ParallelTest::A" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_eb542aab [label="49: B()" name="ParallelTest::B" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_d0d080bb [label="0: (global)()" name="main::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_fe2f8fd0 [label="67: print()" name="main::Output.print" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_036c80f0 [label="31: test_method()" name="main::TestClass.test_method" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_9a85621d [label="32: call_main()" name="somemodule::SomeClass.call_main" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_92641784 [label="28: iterator()" name="somemodule::SomeClass.iterator" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_daacd2dc [label="20: print_something()" name="somemodule::SomeClass.print_something" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_2128daa1 -> node_1fa3e286 [color="#E69F00" penwidth="2"];
node_2128daa1 -> node_eb542aab [color="#E69F00" penwidth="2"];
node_d0d080bb -> node_fe2f8fd0 [color="#009E73" penwidth="2"];
node_d0d080bb -> node_fe2f8fd0 [color="#009E73" penwidth="2"];
node_d0d080bb -> node_fe2f8fd0 [color="#009E73" penwidth="2"];
node_d0d080bb -> node_fe2f8fd0 [color="#009E73" penwidth="2"];
node_d0d080bb -> node_fe2f8fd0 [color="#009E73" penwidth="2"];
node_d0d080bb -> node_036c80f0 [color="#009E73" penwidth="2"];
node_d0d080bb -> node_9a85621d [color="#009E73" penwidth="2"];
node_d0d080bb -> node_92641784 [color="#009E73" penwidth="2"];
node_d0d080bb -> node_daacd2dc [color="#009E73" penwidth="2"];
node_9a85621d -> node_fe2f8fd0 [color="#0072B2" penwidth="2"];
subgraph cluster_d0648d9e {
    node_1fa3e286 node_eb542aab node_2128daa1;
    label="File: ParallelTest";
    name="ParallelTest";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_a039e61e {
    node_d0d080bb;
    label="File: main";
    name="main";
    style="filled";
    graph[style=dotted];
    subgraph cluster_58bbb337 {
        node_036c80f0;
        label="Class: TestClass";
        name="TestClass";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_f0aecb0c {
        node_fe2f8fd0;
        label="Class: Output";
        name="Output";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_8cb2619d {
    label="File: somemodule";
    name="somemodule";
    style="filled";
    graph[style=dotted];
    subgraph cluster_63d0e15d {
        node_daacd2dc node_92641784 node_9a85621d;
        label="Class: SomeClass";
        name="SomeClass";
        style="filled";
        graph[style=dotted];
    };
};
}
